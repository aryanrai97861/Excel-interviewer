import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import type { InterviewSession } from "@/types/interview";

interface ResultsModalProps {
  session: InterviewSession;
  onClose: () => void;
}

export default function ResultsModal({ session, onClose }: ResultsModalProps) {
  const getScoreColor = (score?: number) => {
    if (!score) return 'text-muted-foreground';
    if (score >= 80) return 'text-green-600';
    if (score >= 60) return 'text-yellow-600';
    return 'text-red-600';
  };

  const getScoreBadgeVariant = (score?: number) => {
    if (!score) return 'secondary';
    if (score >= 80) return 'default';
    if (score >= 60) return 'secondary';
    return 'destructive';
  };

  const getPerformanceLevel = (score?: number) => {
    if (!score) return 'Not Assessed';
    if (score >= 80) return 'Strong';
    if (score >= 60) return 'Acceptable';
    return 'Needs Improvement';
  };

  const handleDownloadReport = () => {
    // Create a comprehensive report
    const reportData = {
      candidateInfo: {
        assessmentDate: new Date(session.startedAt).toLocaleDateString(),
        completionDate: session.completedAt ? new Date(session.completedAt).toLocaleDateString() : null,
      },
      scores: {
        overall: session.overallScore,
        practical: session.practicalScore,
        conceptual: session.conceptualScore,
        explanation: session.explanationScore,
        behavioral: session.behavioralScore,
      },
      strengths: session.strengths || [],
      improvements: session.improvements || [],
      recommendations: session.recommendations || [],
    };

    const reportText = `
EXCEL SKILLS ASSESSMENT REPORT
==============================

Assessment Date: ${reportData.candidateInfo.assessmentDate}
Completion Date: ${reportData.candidateInfo.completionDate}

OVERALL PERFORMANCE: ${session.overallScore}% - ${getPerformanceLevel(session.overallScore)}

DETAILED SCORES:
- Practical Tasks: ${session.practicalScore || 0}% (50% weight)
- Conceptual Knowledge: ${session.conceptualScore || 0}% (25% weight)
- Explanations: ${session.explanationScore || 0}% (15% weight)
- Behavioral Assessment: ${session.behavioralScore || 0}% (10% weight)

STRENGTHS:
${session.strengths?.map(strength => `â€¢ ${strength}`).join('\n') || 'No specific strengths recorded.'}

AREAS FOR IMPROVEMENT:
${session.improvements?.map(improvement => `â€¢ ${improvement}`).join('\n') || 'No specific improvements recorded.'}

RECOMMENDATIONS:
${session.recommendations?.map(rec => `â€¢ ${rec}`).join('\n') || 'No specific recommendations recorded.'}

Generated by ExcelAI Interviewer
    `.trim();

    const blob = new Blob([reportText], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.style.display = 'none';
    a.href = url;
    a.download = `excel_assessment_report_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  const handleShareResults = () => {
    const shareText = `I just completed an Excel Skills Assessment and scored ${session.overallScore}%! ðŸ’ª #ExcelSkills #Assessment`;
    
    if (navigator.share) {
      navigator.share({
        title: 'Excel Skills Assessment Results',
        text: shareText,
        url: window.location.href,
      });
    } else {
      // Fallback to clipboard
      navigator.clipboard.writeText(shareText).then(() => {
        alert('Results copied to clipboard!');
      });
    }
  };

  return (
    <div className="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50" data-testid="results-modal">
      <div className="bg-card rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="p-6 border-b border-border">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-semibold">Interview Complete!</h2>
              <p className="text-sm text-muted-foreground">Here's your comprehensive assessment summary</p>
            </div>
            <div className="text-right">
              <div className={`text-2xl font-bold ${getScoreColor(session.overallScore)}`} data-testid="final-score">
                {session.overallScore || 0}%
              </div>
              <div className="text-sm text-muted-foreground">Overall Score</div>
              <Badge variant={getScoreBadgeVariant(session.overallScore)} className="mt-1">
                {getPerformanceLevel(session.overallScore)}
              </Badge>
            </div>
          </div>
        </div>
        
        <div className="p-6 space-y-6">
          {/* Score Breakdown */}
          <div>
            <h3 className="font-semibold mb-4">Score Breakdown</h3>
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div className="text-center p-4 bg-muted rounded-lg">
                <div className={`text-lg font-semibold ${getScoreColor(session.practicalScore)}`} data-testid="score-practical">
                  {session.practicalScore || 0}%
                </div>
                <div className="text-sm text-muted-foreground">Practical Tasks</div>
                <div className="text-xs text-muted-foreground mt-1">50% weight</div>
              </div>
              <div className="text-center p-4 bg-muted rounded-lg">
                <div className={`text-lg font-semibold ${getScoreColor(session.conceptualScore)}`} data-testid="score-conceptual">
                  {session.conceptualScore || 0}%
                </div>
                <div className="text-sm text-muted-foreground">Conceptual</div>
                <div className="text-xs text-muted-foreground mt-1">25% weight</div>
              </div>
              <div className="text-center p-4 bg-muted rounded-lg">
                <div className={`text-lg font-semibold ${getScoreColor(session.explanationScore)}`} data-testid="score-explanation">
                  {session.explanationScore || 0}%
                </div>
                <div className="text-sm text-muted-foreground">Explanations</div>
                <div className="text-xs text-muted-foreground mt-1">15% weight</div>
              </div>
              <div className="text-center p-4 bg-muted rounded-lg">
                <div className={`text-lg font-semibold ${getScoreColor(session.behavioralScore)}`} data-testid="score-behavioral">
                  {session.behavioralScore || 0}%
                </div>
                <div className="text-sm text-muted-foreground">Behavioral</div>
                <div className="text-xs text-muted-foreground mt-1">10% weight</div>
              </div>
            </div>
          </div>

          {/* Strengths & Areas for Improvement */}
          <div className="grid md:grid-cols-2 gap-6">
            <div>
              <h3 className="font-semibold mb-3 text-green-700 flex items-center">
                <i className="fas fa-trophy mr-2"></i>
                Strengths
              </h3>
              {session.strengths && session.strengths.length > 0 ? (
                <ul className="space-y-2 text-sm">
                  {session.strengths.map((strength, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <i className="fas fa-check-circle text-green-500 mt-0.5 text-xs"></i>
                      <span>{strength}</span>
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="text-sm text-muted-foreground">No specific strengths recorded.</p>
              )}
            </div>
            
            <div>
              <h3 className="font-semibold mb-3 text-amber-700 flex items-center">
                <i className="fas fa-exclamation-triangle mr-2"></i>
                Areas for Improvement
              </h3>
              {session.improvements && session.improvements.length > 0 ? (
                <ul className="space-y-2 text-sm">
                  {session.improvements.map((improvement, index) => (
                    <li key={index} className="flex items-start space-x-2">
                      <i className="fas fa-arrow-up text-amber-500 mt-0.5 text-xs"></i>
                      <span>{improvement}</span>
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="text-sm text-muted-foreground">No specific improvements recorded.</p>
              )}
            </div>
          </div>

          {/* Recommendations */}
          {session.recommendations && session.recommendations.length > 0 && (
            <div className="bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg border-l-4 border-blue-500">
              <h3 className="font-semibold mb-2 text-blue-800 dark:text-blue-200 flex items-center">
                <i className="fas fa-lightbulb mr-2"></i>
                Learning Recommendations
              </h3>
              <ul className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
                {session.recommendations.map((recommendation, index) => (
                  <li key={index}>â€¢ {recommendation}</li>
                ))}
              </ul>
            </div>
          )}

          {/* Performance Summary */}
          <div className="bg-muted p-4 rounded-lg">
            <h3 className="font-semibold mb-2">Performance Summary</h3>
            <p className="text-sm text-muted-foreground">
              {session.overallScore && session.overallScore >= 80 ? (
                "Excellent performance! You demonstrate strong Excel proficiency across all categories. You're well-prepared for advanced Excel work in professional environments."
              ) : session.overallScore && session.overallScore >= 60 ? (
                "Good performance! You show solid Excel fundamentals with room for growth in some areas. Focus on the improvement areas to enhance your skills further."
              ) : (
                "You've completed the assessment and shown effort in learning Excel. Focus on the recommended areas for improvement to build stronger Excel skills."
              )}
            </p>
          </div>

          {/* Action Buttons */}
          <div className="flex space-x-3 pt-4 border-t border-border">
            <Button 
              onClick={handleDownloadReport}
              className="flex-1"
              data-testid="button-download-report"
            >
              <i className="fas fa-download mr-2"></i>
              Download Full Report
            </Button>
            <Button 
              onClick={handleShareResults}
              variant="secondary"
              data-testid="button-share-results"
            >
              <i className="fas fa-share mr-2"></i>
              Share Results
            </Button>
            <Button 
              onClick={onClose}
              variant="outline"
              data-testid="button-close-modal"
            >
              Close
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
